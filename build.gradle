plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'org.webppo'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

dependencies {
	// Mvc
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// OAuth2 client
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// JDBC (인증 서버에서 발급 받은 Access 토큰 저장)
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// PostgreSQL
	runtimeOnly 'org.postgresql:postgresql'
	// H2
	testRuntimeOnly 'com.h2database:h2'
	// RestDocs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

ext {
	snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

asciidoctor {
	configurations 'asciidoctorExt'
	baseDirFollowsSourceFile()
	inputs.dir snippetsDir
	dependsOn test
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

tasks.register('copyDocument', Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}
